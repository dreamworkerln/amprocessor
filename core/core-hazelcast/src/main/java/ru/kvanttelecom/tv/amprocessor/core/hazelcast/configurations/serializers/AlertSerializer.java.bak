package ru.kvanttelecom.tv.amprocessor.core.hazelcast.configurations.serializers;

import com.fasterxml.jackson.databind.ObjectMapper;
import com.hazelcast.nio.serialization.ByteArraySerializer;
import lombok.extern.slf4j.Slf4j;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;
import ru.kvanttelecom.tv.amprocessor.core.data.alert.Alert;

import java.io.IOException;


@Component
@Slf4j
public class AlertSerializer implements ByteArraySerializer<Alert> {

    @Autowired
    private ObjectMapper mapper;


    @Override
    public byte[] write(Alert alert) throws IOException {

        //log.debug("JSON: {}", mapper.writeValueAsString(alert));


        byte[] result = mapper.writeValueAsBytes(alert);
        return result;
    }

    @Override
    public Alert read(byte[] buffer) throws IOException {
        //Type listType = new TypeToken<List<Alert>>() {}.getType();
        //return mapper.readValue(buffer, (JavaType)listType);

        //@SuppressWarnings("unchecked")
        //Class<List<Alert>> cls  = (Class<List<Alert>>)(Object)List.class;
        return mapper.readValue(buffer, Alert.class);
    }

    @Override
    public int getTypeId() {
        return 3;
    }
}
