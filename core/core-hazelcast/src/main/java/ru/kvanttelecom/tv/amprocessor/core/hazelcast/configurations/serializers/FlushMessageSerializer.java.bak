package ru.kvanttelecom.tv.amprocessor.core.hazelcast.configurations.serializers;

import com.fasterxml.jackson.core.type.TypeReference;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.hazelcast.nio.serialization.ByteArraySerializer;
import lombok.extern.slf4j.Slf4j;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;
import ru.kvanttelecom.tv.amprocessor.core.hazelcast.services._base.messages.BaseMessage;


import java.io.IOException;
import java.util.Set;

@Component
@Slf4j
public class FlushMessageSerializer implements ByteArraySerializer<Message<Set<String>>> {

    @Autowired
    private ObjectMapper mapper;


    @Override
    public byte[] write(Message<Set<String>> message) throws IOException {
        return mapper.writeValueAsBytes(message);
    }

    @Override
    public Message<Set<String>> read(byte[] buffer) throws IOException {
        return mapper.readValue(buffer, Message.class);
    }

    @Override
    public int getTypeId() {
        return 2;
    }
}
