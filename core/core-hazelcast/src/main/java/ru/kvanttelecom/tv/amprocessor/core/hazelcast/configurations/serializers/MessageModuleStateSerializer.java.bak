package ru.kvanttelecom.tv.amprocessor.core.hazelcast.configurations.serializers;

import com.fasterxml.jackson.core.type.TypeReference;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.hazelcast.nio.serialization.ByteArraySerializer;
import org.apache.commons.lang3.tuple.Pair;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;
import ru.kvanttelecom.tv.amprocessor.core.hazelcast.data.ModuleState;
import ru.kvanttelecom.tv.amprocessor.core.hazelcast.services._base.messages.BaseMessage;
import ru.kvanttelecom.tv.amprocessor.core.hazelcast.services.modules.messages.MessageModuleState;

import java.io.IOException;
import java.util.Set;

@Component
public class MessageModuleStateSerializer implements ByteArraySerializer<MessageModuleState> {

    @Autowired
    private ObjectMapper mapper;


    @Override
    public byte[] write(MessageModuleState state) throws IOException {
        return mapper.writeValueAsBytes(state);
    }

    @Override
    public MessageModuleState read(byte[] buffer) throws IOException {
        return mapper.readValue(buffer, MessageModuleState.class);
    }

    @Override
    public int getTypeId() {
        return 5;
    }
}


//TypeReference<Message<Pair<String,ModuleState>>> typeReference = new TypeReference<>() {};